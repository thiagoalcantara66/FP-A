# Importar bibliotecas necessárias
import os
import pandas as pd
from google.colab import files

# Passo 1: Upload do arquivo Excel
print("Faça o upload do arquivo Excel:")
uploaded = files.upload()

# Passo 2: Carregar o arquivo Excel carregado
# Obter o nome do arquivo carregado
arquivo_excel = list(uploaded.keys())[0]

# Passo 3: Ler as abas NOTAS e DISTRIBUICAO
saida_excel = pd.ExcelFile(arquivo_excel)
notas_df = pd.read_excel(saida_excel, sheet_name="NOTAS")
distribuicao_df = pd.read_excel(saida_excel, sheet_name="DISTRIBUICAO")

# Passo 4: Identificar os Centros de Custo únicos na aba NOTAS
centros_de_custo_unicos = notas_df["Centro de Custo"].unique()

# Passo 5: Criar pasta para salvar arquivos gerados
output_folder = "/content/Planilhas_Centros_de_Custo"
os.makedirs(output_folder, exist_ok=True)

# Passo 6: Processar cada Centro de Custo
for centro_custo in centros_de_custo_unicos:
    # Filtrar os dados da aba NOTAS para o Centro de Custo atual
    notas_filtradas = notas_df[notas_df["Centro de Custo"] == centro_custo]
    
    # Determinar as linhas da aba DISTRIBUICAO para o Centro de Custo atual
    # Localizar o índice inicial do Centro de Custo atual
    inicio_linha = distribuicao_df[distribuicao_df["Código da regra de distribuição"] == centro_custo].index.min()

    # Localizar o índice do próximo Centro de Custo
    indices_ordenados = distribuicao_df["Código da regra de distribuição"].dropna().index
    proximo_centro_idx = indices_ordenados[indices_ordenados > inicio_linha].min() if inicio_linha is not None else None

    # Selecionar as linhas entre inicio_linha e a linha antes do próximo Centro de Custo
    if pd.notnull(inicio_linha):
        if pd.notnull(proximo_centro_idx):
            distribuicao_filtrada = distribuicao_df.iloc[inicio_linha:proximo_centro_idx]
        else:
            distribuicao_filtrada = distribuicao_df.iloc[inicio_linha:]
    else:
        distribuicao_filtrada = pd.DataFrame()  # Caso não haja correspondência
    
    # Criar um novo arquivo Excel para o Centro de Custo
    centro_custo_file_path = os.path.join(output_folder, f"Centro_de_Custo_{int(centro_custo)}.xlsx")
    
    with pd.ExcelWriter(centro_custo_file_path, engine="openpyxl") as writer:
        notas_filtradas.to_excel(writer, sheet_name="NOTAS", index=False)
        distribuicao_filtrada.to_excel(writer, sheet_name="DISTRIBUICAO", index=False)

# Passo 7: Compactar e permitir o download de todos os arquivos gerados
import shutil

shutil.make_archive("Planilhas_Centros_de_Custo", 'zip', output_folder)
print("Processamento concluído! Faça o download dos arquivos gerados.")
files.download("Planilhas_Centros_de_Custo.zip")
